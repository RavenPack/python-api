name: Python Package using Conda

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install test dependencies
      run: |
        # Pip dependencies
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        RP_API_KEY: ${{ secrets.RP_API_KEY }}
      run: |
        pytest

  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        # Pip dependencies
        python -m pip install --upgrade pip
        pip install build
        # Conda dependencies
        conda config --add channels conda-forge
        conda install --yes conda-build
        conda install --yes --file requirements.txt
    - name: Build Pip package
      run: |
        python setup.py sdist
    - name: Build Conda package
      run: |
        python setup.py bdist_conda
    - name: Copy Conda packages to local dist folder
      run: |
        mkdir -p dist-conda
        cp -r /usr/share/miniconda/conda-bld/linux-64 ./dist-conda/
        cd dist-conda
        conda convert -p osx-64 linux-64/*.tar.bz2
        conda convert -p win-64 linux-64/*.tar.bz2

    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: |
          dist/
          dist-conda/

  dist:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    needs:
    - build
    - test
    environment:
      name: pypi
      url: https://test.pypi.org/p/ravenpackapi
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        # path: dist/
    - name: Set up Python 3.10 for Anaconda
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Setup anaconda
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        conda install --yes anaconda-client
    - name: Upload to Anaconda
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        ls
        cd dist-conda
        ls
        anaconda upload --label main osx-64/*.tar.bz2
        anaconda upload --label main linux-64/*.tar.bz2
        anaconda upload --label main win-64/*.tar.bz2
      # https://github.com/pypa/gh-action-pypi-publish
    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
